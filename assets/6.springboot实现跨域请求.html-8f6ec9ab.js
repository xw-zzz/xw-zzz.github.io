import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as p,f as c,a as n,e as s,d as t,b as l}from"./app-ef0b4d9d.js";const u="/assets/20220802154431-3585b138.png",r={},d=n("h2",{id:"基本介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#基本介绍","aria-hidden":"true"},"#"),s(" 基本介绍")],-1),k=n("p",null,"简单来说，CORS 是一种访问机制，英文全称是 Cross-Origin Resource Sharing，即我们常说的跨域资源共享，通过在服务器端设置响应头，把发起跨域的原始域名添加到 Access-Control-Allow-Origin 即可。",-1),v=l('<h2 id="cors-工作原理" tabindex="-1"><a class="header-anchor" href="#cors-工作原理" aria-hidden="true">#</a> CORS 工作原理</h2><p>CORS 实现跨域访问并不是一蹴而就的，需要借助浏览器的支持，从原理题图我们可以清楚看到，简单的请求（通常指 GET/POST/HEAD 方式，并没有去增加额外的请求头信息）直接创建了跨域请求的 XHR 对象，而复杂的请求则要求先发送一个”预检”请求，待服务器批准后才能真正发起跨域访问请求。一般来说跨域请求由浏览器自动判断完成，实现跨域请求只需要在服务端处理返回响应头。<br><img src="'+u+`" style="zoom:200%;"></p><h2 id="跨域相关协议头" tabindex="-1"><a class="header-anchor" href="#跨域相关协议头" aria-hidden="true">#</a> 跨域相关协议头</h2><p><img src="https://pic2.zhimg.com/80/v2-05ad8aafcbc96e56228721177461c8e1_hd.jpg" alt="null" loading="lazy"></p><h2 id="springboot-实现跨域的几种方式" tabindex="-1"><a class="header-anchor" href="#springboot-实现跨域的几种方式" aria-hidden="true">#</a> SpringBoot 实现跨域的几种方式</h2><h3 id="crossorigin-注解" tabindex="-1"><a class="header-anchor" href="#crossorigin-注解" aria-hidden="true">#</a> @CrossOrigin 注解</h3><h4 id="在-controller-上使用表示该-controller-下所有的方法都允许跨域。" tabindex="-1"><a class="header-anchor" href="#在-controller-上使用表示该-controller-下所有的方法都允许跨域。" aria-hidden="true">#</a> 在 controller 上使用表示该 controller 下所有的方法都允许跨域。</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@CrossOrigin(origins = &quot;http://domain2.com&quot;, maxAge = 3600)
@RestController
@RequestMapping(&quot;/account&quot;)
public class AccountController {

	@GetMapping(&quot;/{id}&quot;)
	public Account retrieve(@PathVariable Long id) {
		// ...
	}

	@DeleteMapping(&quot;/{id}&quot;)
	public void remove(@PathVariable Long id) {
		// ...
	}
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="在方法上面使用-方法上面进行控制。" tabindex="-1"><a class="header-anchor" href="#在方法上面使用-方法上面进行控制。" aria-hidden="true">#</a> 在方法上面使用，方法上面进行控制。</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/account&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccountController</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@CrossOrigin</span>
	<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/{id}&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">Account</span> <span class="token function">retrieve</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// ...</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@DeleteMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/{id}&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> <span class="token class-name">Long</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// ...</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>origins</strong> ： 允许可访问的域列表<br><strong>maxAge</strong>：准备响应前的缓存持续的最大时间（以秒为单位）。</p><p><em>注意：springMVC4.2 或以上版本才支持@CrossOrigin</em></p><h3 id="_2、重写webmvcconfig" tabindex="-1"><a class="header-anchor" href="#_2、重写webmvcconfig" aria-hidden="true">#</a> 2、重写WebMvcConfig</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalCorsConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token function">corsConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">WebMvcConfigurer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token comment">//重写父类提供的跨域请求处理的接口</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addCorsMappings</span><span class="token punctuation">(</span><span class="token class-name">CorsRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//添加映射路径</span>
                registry<span class="token punctuation">.</span><span class="token function">addMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">)</span>
                        <span class="token comment">//放行哪些原始域</span>
                        <span class="token punctuation">.</span><span class="token function">allowedOrigins</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
                        <span class="token comment">//是否发送Cookie信息</span>
                        <span class="token punctuation">.</span><span class="token function">allowCredentials</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
                        <span class="token comment">//放行哪些原始域(请求方式)</span>
                        <span class="token punctuation">.</span><span class="token function">allowedMethods</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PUT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DELETE&quot;</span><span class="token punctuation">)</span>
                        <span class="token comment">//放行哪些原始域(头部信息)</span>
                        <span class="token punctuation">.</span><span class="token function">allowedHeaders</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span>
                        <span class="token comment">//暴露哪些头部信息（因为跨域访问默认不能获取全部头部信息）</span>
                        <span class="token punctuation">.</span><span class="token function">exposedHeaders</span><span class="token punctuation">(</span><span class="token string">&quot;Header1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Header2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、corsfilter" tabindex="-1"><a class="header-anchor" href="#_3、corsfilter" aria-hidden="true">#</a> 3、CorsFilter</h3><p>Spring 框架还提供了 CorsFilter。 在这种情况下，您可以在 Spring Boot 应用程序中声明如下过滤器</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyConfiguration</span> <span class="token punctuation">{</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">FilterRegistrationBean</span> <span class="token function">corsFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">UrlBasedCorsConfigurationSource</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UrlBasedCorsConfigurationSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CorsConfiguration</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CorsConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		config<span class="token punctuation">.</span><span class="token function">setAllowCredentials</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		config<span class="token punctuation">.</span><span class="token function">addAllowedOrigin</span><span class="token punctuation">(</span><span class="token string">&quot;http://domain1.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		config<span class="token punctuation">.</span><span class="token function">addAllowedHeader</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		config<span class="token punctuation">.</span><span class="token function">addAllowedMethod</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		source<span class="token punctuation">.</span><span class="token function">registerCorsConfiguration</span><span class="token punctuation">(</span><span class="token string">&quot;/**&quot;</span><span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">FilterRegistrationBean</span> bean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FilterRegistrationBean</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CorsFilter</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bean<span class="token punctuation">.</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> bean<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),m={href:"https://spring.io/blog/2015/06/08/cors-support-in-spring-framework",target:"_blank",rel:"noopener noreferrer"},b=n("br",null,null,-1),g={href:"https://github.com/2457081614/springboot-all-demo.git",target:"_blank",rel:"noopener noreferrer"};function h(f,C){const a=o("ExternalLinkIcon");return i(),p("div",null,[d,k,c("more"),v,n("p",null,[n("a",m,[s("spring官网文档"),t(a)]),b,n("a",g,[s("项目源码"),t(a)])])])}const w=e(r,[["render",h],["__file","6.springboot实现跨域请求.html.vue"]]);export{w as default};

import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,b as t}from"./app-ef0b4d9d.js";const p="/assets/image-20221121142847580-fa5be0a0.png",o="/assets/image-20221121152841873-4163d896.png",e="/assets/image-20221121153607193-68662b44.png",c="/assets/image-20221121163216231-66117f61.png",u={},l=t('<h2 id="概览" tabindex="-1"><a class="header-anchor" href="#概览" aria-hidden="true">#</a> 概览</h2><p>一次任务调度流程的过程如下图所示：</p><p><img src="'+p+`" alt="image-20221121142847580" loading="lazy"></p><h2 id="源码分析" tabindex="-1"><a class="header-anchor" href="#源码分析" aria-hidden="true">#</a> 源码分析</h2><h3 id="调度中心流程" tabindex="-1"><a class="header-anchor" href="#调度中心流程" aria-hidden="true">#</a> 调度中心流程</h3><p>任务的调度执行是从调用<code>com.xxl.job.admin.core.thread.JobTriggerPoolHelper#trigger</code>接口开始，该方法如下所示：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addTrigger</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token keyword">int</span> jobId<span class="token punctuation">,</span>
                       <span class="token keyword">final</span> <span class="token class-name">TriggerTypeEnum</span> triggerType<span class="token punctuation">,</span>
                       <span class="token keyword">final</span> <span class="token keyword">int</span> failRetryCount<span class="token punctuation">,</span>
                       <span class="token keyword">final</span> <span class="token class-name">String</span> executorShardingParam<span class="token punctuation">,</span>
                       <span class="token keyword">final</span> <span class="token class-name">String</span> executorParam<span class="token punctuation">,</span>
                       <span class="token keyword">final</span> <span class="token class-name">String</span> addressList<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">// choose thread pool</span>
    <span class="token comment">// 首先选择线程池，一共有两个线程池，一个用户处理耗时较短的任务，一个用户处理耗时较长的任务。</span>
    <span class="token class-name">ThreadPoolExecutor</span> triggerPool_ <span class="token operator">=</span> fastTriggerPool<span class="token punctuation">;</span>
    <span class="token class-name">AtomicInteger</span> jobTimeoutCount <span class="token operator">=</span> jobTimeoutCountMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>jobId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>jobTimeoutCount<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> jobTimeoutCount<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment">// job-timeout 10 times in 1 min</span>
        triggerPool_ <span class="token operator">=</span> slowTriggerPool<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// trigger</span>
    triggerPool_<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token keyword">long</span> start <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment">// do trigger</span>
                <span class="token class-name">XxlJobTrigger</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> triggerType<span class="token punctuation">,</span> failRetryCount<span class="token punctuation">,</span> executorShardingParam<span class="token punctuation">,</span> executorParam<span class="token punctuation">,</span> addressList<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>

                <span class="token comment">// check timeout-count-map</span>
                <span class="token keyword">long</span> minTim_now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">60000</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>minTim <span class="token operator">!=</span> minTim_now<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    minTim <span class="token operator">=</span> minTim_now<span class="token punctuation">;</span>
                    jobTimeoutCountMap<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// incr timeout-count-map</span>
                <span class="token keyword">long</span> cost <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>start<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>cost <span class="token operator">&gt;</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token comment">// ob-timeout threshold 500ms</span>
                    <span class="token class-name">AtomicInteger</span> timeoutCount <span class="token operator">=</span> jobTimeoutCountMap<span class="token punctuation">.</span><span class="token function">putIfAbsent</span><span class="token punctuation">(</span>jobId<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>timeoutCount <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        timeoutCount<span class="token punctuation">.</span><span class="token function">incrementAndGet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大致流程如下：</p><ul><li><p>选择线程池，默认有两个线程池，一个用于执行耗时较短的任务，一个用户执行耗时较长的任务，当某任务一分钟内执行超时超过10次时（超时时间默认为500ms），该任务将会被标记为耗时较长。</p></li><li><p>在线程池执行调度逻辑，<code>com.xxl.job.admin.core.trigger.XxlJobTrigger#processTrigger</code>核心代码如下,大概流程</p><ul><li>保存执行日志ID</li><li>初始化触发参数</li><li>初始化执行器地址</li><li>HTTP调用执行器服务端</li><li>收集采集信息，保存执行结果</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">processTrigger</span><span class="token punctuation">(</span><span class="token class-name">XxlJobGroup</span> group<span class="token punctuation">,</span> <span class="token class-name">XxlJobInfo</span> jobInfo<span class="token punctuation">,</span> <span class="token keyword">int</span> finalFailRetryCount<span class="token punctuation">,</span> <span class="token class-name">TriggerTypeEnum</span> triggerType<span class="token punctuation">,</span> <span class="token keyword">int</span> index<span class="token punctuation">,</span> <span class="token keyword">int</span> total<span class="token punctuation">)</span><span class="token punctuation">{</span>

        <span class="token comment">// param</span>
        <span class="token class-name">ExecutorBlockStrategyEnum</span> blockStrategy <span class="token operator">=</span> <span class="token class-name">ExecutorBlockStrategyEnum</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorBlockStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ExecutorBlockStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">SERIAL_EXECUTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// block strategy</span>
        <span class="token class-name">ExecutorRouteStrategyEnum</span> executorRouteStrategyEnum <span class="token operator">=</span> <span class="token class-name">ExecutorRouteStrategyEnum</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorRouteStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// route strategy</span>
        <span class="token class-name">String</span> shardingParam <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ExecutorRouteStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">SHARDING_BROADCAST</span><span class="token operator">==</span>executorRouteStrategyEnum<span class="token punctuation">)</span><span class="token operator">?</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token comment">// 1、save log-id</span>
        <span class="token comment">//保存执行日志</span>
        <span class="token class-name">XxlJobLog</span> jobLog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XxlJobLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setJobGroup</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getJobGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setJobId</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setTriggerTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">XxlJobAdminConfig</span><span class="token punctuation">.</span><span class="token function">getAdminConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getXxlJobLogDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>jobLog<span class="token punctuation">)</span><span class="token punctuation">;</span>
        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job trigger start, jobId:{}&quot;</span><span class="token punctuation">,</span> jobLog<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 2、init trigger-param</span>
        <span class="token comment">//初始化触发参数</span>
        <span class="token class-name">TriggerParam</span> triggerParam <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TriggerParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setJobId</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setExecutorHandler</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setExecutorParams</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setExecutorBlockStrategy</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorBlockStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setExecutorTimeout</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setLogId</span><span class="token punctuation">(</span>jobLog<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setLogDateTime</span><span class="token punctuation">(</span>jobLog<span class="token punctuation">.</span><span class="token function">getTriggerTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setGlueType</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getGlueType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setGlueSource</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getGlueSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setGlueUpdatetime</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getGlueUpdatetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setBroadcastIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerParam<span class="token punctuation">.</span><span class="token function">setBroadcastTotal</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 3、init address</span>
        <span class="token comment">// 初始化地址</span>
        <span class="token class-name">String</span> address <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> routeAddressResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>group<span class="token punctuation">.</span><span class="token function">getRegistryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>group<span class="token punctuation">.</span><span class="token function">getRegistryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ExecutorRouteStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">SHARDING_BROADCAST</span> <span class="token operator">==</span> executorRouteStrategyEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> group<span class="token punctuation">.</span><span class="token function">getRegistryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    address <span class="token operator">=</span> group<span class="token punctuation">.</span><span class="token function">getRegistryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    address <span class="token operator">=</span> group<span class="token punctuation">.</span><span class="token function">getRegistryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                routeAddressResult <span class="token operator">=</span> executorRouteStrategyEnum<span class="token punctuation">.</span><span class="token function">getRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">route</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">,</span> group<span class="token punctuation">.</span><span class="token function">getRegistryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>routeAddressResult<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ReturnT</span><span class="token punctuation">.</span><span class="token constant">SUCCESS_CODE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    address <span class="token operator">=</span> routeAddressResult<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            routeAddressResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ReturnT</span><span class="token punctuation">.</span><span class="token constant">FAIL_CODE</span><span class="token punctuation">,</span> <span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobconf_trigger_address_empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 4、trigger remote executor</span>
        <span class="token comment">// 远程调用，HTTP调用</span>
        <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> triggerResult <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>address <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            triggerResult <span class="token operator">=</span> <span class="token function">runExecutor</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">,</span> address<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            triggerResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ReturnT</span><span class="token punctuation">.</span><span class="token constant">FAIL_CODE</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 5、collection trigger info</span>
        <span class="token comment">// 收集采集信息</span>
        <span class="token class-name">StringBuffer</span> triggerMsgSb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobconf_trigger_type&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>triggerType<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobconf_trigger_admin_adress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">IpUtil</span><span class="token punctuation">.</span><span class="token function">getIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobconf_trigger_exe_regtype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>group<span class="token punctuation">.</span><span class="token function">getAddressType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobgroup_field_addressType_0&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobgroup_field_addressType_1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobconf_trigger_exe_regaddress&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>group<span class="token punctuation">.</span><span class="token function">getRegistryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobinfo_field_executorRouteStrategy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>executorRouteStrategyEnum<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>shardingParam <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;(&quot;</span><span class="token operator">+</span>shardingParam<span class="token operator">+</span><span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobinfo_field_executorBlockStrategy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>blockStrategy<span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobinfo_field_timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobinfo_field_executorFailRetryCount&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>finalFailRetryCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

        triggerMsgSb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;br&gt;&lt;br&gt;&lt;span style=\\&quot;color:#00c0ef;\\&quot; &gt; &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;</span><span class="token operator">+</span> <span class="token class-name">I18nUtil</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;jobconf_trigger_run&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">&quot;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; &lt;/span&gt;&lt;br&gt;&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token punctuation">(</span>routeAddressResult<span class="token operator">!=</span><span class="token keyword">null</span><span class="token operator">&amp;&amp;</span>routeAddressResult<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">?</span>routeAddressResult<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&lt;br&gt;&lt;br&gt;&quot;</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>triggerResult<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token operator">?</span>triggerResult<span class="token punctuation">.</span><span class="token function">getMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 6、save log trigger-info</span>
        <span class="token comment">// 保存日志触发结果</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setExecutorAddress</span><span class="token punctuation">(</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setExecutorHandler</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setExecutorParam</span><span class="token punctuation">(</span>jobInfo<span class="token punctuation">.</span><span class="token function">getExecutorParam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setExecutorShardingParam</span><span class="token punctuation">(</span>shardingParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setExecutorFailRetryCount</span><span class="token punctuation">(</span>finalFailRetryCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//jobLog.setTriggerTime();</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setTriggerCode</span><span class="token punctuation">(</span>triggerResult<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        jobLog<span class="token punctuation">.</span><span class="token function">setTriggerMsg</span><span class="token punctuation">(</span>triggerMsgSb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">XxlJobAdminConfig</span><span class="token punctuation">.</span><span class="token function">getAdminConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getXxlJobLogDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">updateTriggerInfo</span><span class="token punctuation">(</span>jobLog<span class="token punctuation">)</span><span class="token punctuation">;</span>

        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; xxl-job trigger end, jobId:{}&quot;</span><span class="token punctuation">,</span> jobLog<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="执行器流程" tabindex="-1"><a class="header-anchor" href="#执行器流程" aria-hidden="true">#</a> 执行器流程</h3><p>执行器内置了一个Netty http服务端用于接收调度中心的请求，处理的核心逻辑在<code>com.xxl.job.core.server.EmbedServer.EmbedHttpServerHandler#channelRead0</code>，通过线程池处理调度逻辑，代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">channelRead0</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">ChannelHandlerContext</span> ctx<span class="token punctuation">,</span> <span class="token class-name">FullHttpRequest</span> msg<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// request parse</span>
    <span class="token comment">//final byte[] requestBytes = ByteBufUtil.getBytes(msg.content());    // byteBuf.toString(io.netty.util.CharsetUtil.UTF_8);</span>
    <span class="token class-name">String</span> requestData <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token class-name">CharsetUtil</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> uri <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpMethod</span> httpMethod <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> keepAlive <span class="token operator">=</span> <span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">isKeepAlive</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> accessTokenReq <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token function">headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">XxlJobRemotingUtil</span><span class="token punctuation">.</span><span class="token constant">XXL_JOB_ACCESS_TOKEN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// invoke</span>
    bizThreadPool<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// do invoke</span>
            <span class="token class-name">Object</span> responseObj <span class="token operator">=</span> <span class="token function">process</span><span class="token punctuation">(</span>httpMethod<span class="token punctuation">,</span> uri<span class="token punctuation">,</span> requestData<span class="token punctuation">,</span> accessTokenReq<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// to json</span>
            <span class="token class-name">String</span> responseJson <span class="token operator">=</span> <span class="token class-name">GsonTool</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>responseObj<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// write response</span>
            <span class="token function">writeResponse</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> keepAlive<span class="token punctuation">,</span> responseJson<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>process方法底层会调用<code>com.xxl.job.core.biz.impl.ExecutorBizImpl#run</code>方法将任务执行请求添加到JobThread的队列当中，JobThread是对任务执行的进一步封装，每一个JobThread有一个异步阻塞队列，正常情况下，一个任务对应一个JobThread对象，执行任务请求会放入到阻塞队列当中，JobThread会轮询获取阻塞队列的请求并处理。类属性和结构如下：</p><p><img src="`+o+'" alt="image-20221121152841873" loading="lazy"><img src="'+e+`" alt="image-20221121153607193" loading="lazy"></p><p>执行方法源代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">TriggerParam</span> triggerParam<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// load old：jobHandler + jobThread</span>
        <span class="token class-name">JobThread</span> jobThread <span class="token operator">=</span> <span class="token class-name">XxlJobExecutor</span><span class="token punctuation">.</span><span class="token function">loadJobThread</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IJobHandler</span> jobHandler <span class="token operator">=</span> jobThread<span class="token operator">!=</span><span class="token keyword">null</span><span class="token operator">?</span>jobThread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> removeOldReason <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token comment">// valid：jobHandler + jobThread</span>
        <span class="token class-name">GlueTypeEnum</span> glueTypeEnum <span class="token operator">=</span> <span class="token class-name">GlueTypeEnum</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">.</span><span class="token function">getGlueType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">GlueTypeEnum</span><span class="token punctuation">.</span><span class="token constant">BEAN</span> <span class="token operator">==</span> glueTypeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token comment">// new jobhandler</span>
            <span class="token class-name">IJobHandler</span> newJobHandler <span class="token operator">=</span> <span class="token class-name">XxlJobExecutor</span><span class="token punctuation">.</span><span class="token function">loadJobHandler</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">.</span><span class="token function">getExecutorHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// valid old jobThread</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>jobThread<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> jobHandler <span class="token operator">!=</span> newJobHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// change handler, need kill old thread</span>
                removeOldReason <span class="token operator">=</span> <span class="token string">&quot;change jobhandler or glue type, and terminate the old job thread.&quot;</span><span class="token punctuation">;</span>

                jobThread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                jobHandler <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// valid handler</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>jobHandler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                jobHandler <span class="token operator">=</span> newJobHandler<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>jobHandler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ReturnT</span><span class="token punctuation">.</span><span class="token constant">FAIL_CODE</span><span class="token punctuation">,</span> <span class="token string">&quot;job handler [&quot;</span> <span class="token operator">+</span> triggerParam<span class="token punctuation">.</span><span class="token function">getExecutorHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] not found.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">GlueTypeEnum</span><span class="token punctuation">.</span><span class="token constant">GLUE_GROOVY</span> <span class="token operator">==</span> glueTypeEnum<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token comment">// valid old jobThread</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>jobThread <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token operator">!</span><span class="token punctuation">(</span>jobThread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">GlueJobHandler</span>
                        <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">GlueJobHandler</span><span class="token punctuation">)</span> jobThread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getGlueUpdatetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>triggerParam<span class="token punctuation">.</span><span class="token function">getGlueUpdatetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// change handler or gluesource updated, need kill old thread</span>
                removeOldReason <span class="token operator">=</span> <span class="token string">&quot;change job source or glue type, and terminate the old job thread.&quot;</span><span class="token punctuation">;</span>

                jobThread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                jobHandler <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// valid handler</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>jobHandler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token class-name">IJobHandler</span> originJobHandler <span class="token operator">=</span> <span class="token class-name">GlueFactory</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadNewInstance</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">.</span><span class="token function">getGlueSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    jobHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GlueJobHandler</span><span class="token punctuation">(</span>originJobHandler<span class="token punctuation">,</span> triggerParam<span class="token punctuation">.</span><span class="token function">getGlueUpdatetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ReturnT</span><span class="token punctuation">.</span><span class="token constant">FAIL_CODE</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>glueTypeEnum<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> glueTypeEnum<span class="token punctuation">.</span><span class="token function">isScript</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token comment">// valid old jobThread</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>jobThread <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token operator">!</span><span class="token punctuation">(</span>jobThread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">ScriptJobHandler</span>
                            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ScriptJobHandler</span><span class="token punctuation">)</span> jobThread<span class="token punctuation">.</span><span class="token function">getHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getGlueUpdatetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>triggerParam<span class="token punctuation">.</span><span class="token function">getGlueUpdatetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// change script or gluesource updated, need kill old thread</span>
                removeOldReason <span class="token operator">=</span> <span class="token string">&quot;change job source or glue type, and terminate the old job thread.&quot;</span><span class="token punctuation">;</span>

                jobThread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                jobHandler <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// valid handler</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>jobHandler <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                jobHandler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScriptJobHandler</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> triggerParam<span class="token punctuation">.</span><span class="token function">getGlueUpdatetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> triggerParam<span class="token punctuation">.</span><span class="token function">getGlueSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">GlueTypeEnum</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">.</span><span class="token function">getGlueType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ReturnT</span><span class="token punctuation">.</span><span class="token constant">FAIL_CODE</span><span class="token punctuation">,</span> <span class="token string">&quot;glueType[&quot;</span> <span class="token operator">+</span> triggerParam<span class="token punctuation">.</span><span class="token function">getGlueType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] is not valid.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// executor block strategy</span>
        <span class="token comment">//阻塞策略</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>jobThread <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">ExecutorBlockStrategyEnum</span> blockStrategy <span class="token operator">=</span> <span class="token class-name">ExecutorBlockStrategyEnum</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">.</span><span class="token function">getExecutorBlockStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//如果是丢弃后续调度  </span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ExecutorBlockStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">DISCARD_LATER</span> <span class="token operator">==</span> blockStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// discard when running</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>jobThread<span class="token punctuation">.</span><span class="token function">isRunningOrHasQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ReturnT</span><span class="token punctuation">.</span><span class="token constant">FAIL_CODE</span><span class="token punctuation">,</span> <span class="token string">&quot;block strategy effect：&quot;</span><span class="token operator">+</span><span class="token class-name">ExecutorBlockStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">DISCARD_LATER</span><span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">ExecutorBlockStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">COVER_EARLY</span> <span class="token operator">==</span> blockStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// kill running jobThread</span>
               <span class="token comment">//如果是覆盖之前调度，将jobThread置空</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>jobThread<span class="token punctuation">.</span><span class="token function">isRunningOrHasQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    removeOldReason <span class="token operator">=</span> <span class="token string">&quot;block strategy effect：&quot;</span> <span class="token operator">+</span> <span class="token class-name">ExecutorBlockStrategyEnum</span><span class="token punctuation">.</span><span class="token constant">COVER_EARLY</span><span class="token punctuation">.</span><span class="token function">getTitle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                    jobThread <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// just queue trigger</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// replace thread (new or exists invalid)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>jobThread <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            jobThread <span class="token operator">=</span> <span class="token class-name">XxlJobExecutor</span><span class="token punctuation">.</span><span class="token function">registJobThread</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">.</span><span class="token function">getJobId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> jobHandler<span class="token punctuation">,</span> removeOldReason<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// push data to queue</span>
        <span class="token class-name">ReturnT</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> pushResult <span class="token operator">=</span> jobThread<span class="token punctuation">.</span><span class="token function">pushTriggerQueue</span><span class="token punctuation">(</span>triggerParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> pushResult<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>任务与JobThread对应的流程图如下，以任务1执行为例，任务1对应一个JobThread，先从缓存判断对应任务的JobThread是否存在，如果不存在，新建一个，判断调度阻塞的策略，如果是覆盖之前的调度，将对应的JobThread停掉并开始一个新的JobThread并放入缓存。JobThread会循环获取任务请求队列的数据并执行，将执行结果放入结果回调队列。为了避免JobThread线程空转，当队列不存在数据并且循环次数超过30次后，线程将关闭，减少CPU使用。</p><p><img src="`+c+'" alt="image-20221121163216231" loading="lazy"></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>为了提高吞吐量和性能，XXL-JOB使用了线程池、队列、NIO(Netty)、批量处理等技术，为了避免调度任务执行时间不一致可能会引起的全局阻塞，将调度任务线程池分成了处理耗时较长任务的线程池和处理耗时较短任务的线程池分开处理，从线程池角度对任务进行隔离。</p>',20),i=[l];function k(r,d){return s(),a("div",null,i)}const v=n(u,[["render",k],["__file","03.XXL-JOB任务执行流程分析.html.vue"]]);export{v as default};

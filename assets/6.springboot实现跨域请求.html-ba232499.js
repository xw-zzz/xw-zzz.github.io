const t=JSON.parse('{"key":"v-2d0ccac5","path":"/framework/6.SpringBoot/6.springboot%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82.html","title":"Springboot实现跨域请求","lang":"zh-CN","frontmatter":{"title":"Springboot实现跨域请求","date":"2021-02-24T00:00:00.000Z","category":["Spring"],"author":{"name":"xw","link":"https://github.com/2457081614"},"tag":["Java","Spring Boot"],"description":"基本介绍 简单来说，CORS 是一种访问机制，英文全称是 Cross-Origin Resource Sharing，即我们常说的跨域资源共享，通过在服务器端设置响应头，把发起跨域的原始域名添加到 Access-Control-Allow-Origin 即可。 CORS 工作原理 CORS 实现跨域访问并不是一蹴而就的，需要借助浏览器的支持，从原理题图...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/framework/6.SpringBoot/6.springboot%E5%AE%9E%E7%8E%B0%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82.html"}],["meta",{"property":"og:site_name","content":"向往@"}],["meta",{"property":"og:title","content":"Springboot实现跨域请求"}],["meta",{"property":"og:description","content":"基本介绍 简单来说，CORS 是一种访问机制，英文全称是 Cross-Origin Resource Sharing，即我们常说的跨域资源共享，通过在服务器端设置响应头，把发起跨域的原始域名添加到 Access-Control-Allow-Origin 即可。 CORS 工作原理 CORS 实现跨域访问并不是一蹴而就的，需要借助浏览器的支持，从原理题图..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-26T02:20:44.000Z"}],["meta",{"property":"article:author","content":"xw"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"Spring Boot"}],["meta",{"property":"article:published_time","content":"2021-02-24T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-26T02:20:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Springboot实现跨域请求\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-02-24T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-26T02:20:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xw\\",\\"link\\":\\"https://github.com/2457081614\\"}]}"]]},"headers":[{"level":2,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[]},{"level":2,"title":"CORS 工作原理","slug":"cors-工作原理","link":"#cors-工作原理","children":[]},{"level":2,"title":"跨域相关协议头","slug":"跨域相关协议头","link":"#跨域相关协议头","children":[]},{"level":2,"title":"SpringBoot 实现跨域的几种方式","slug":"springboot-实现跨域的几种方式","link":"#springboot-实现跨域的几种方式","children":[{"level":3,"title":"@CrossOrigin 注解","slug":"crossorigin-注解","link":"#crossorigin-注解","children":[]},{"level":3,"title":"2、重写WebMvcConfig","slug":"_2、重写webmvcconfig","link":"#_2、重写webmvcconfig","children":[]},{"level":3,"title":"3、CorsFilter","slug":"_3、corsfilter","link":"#_3、corsfilter","children":[]}]}],"git":{"createdTime":1695694844000,"updatedTime":1695694844000,"contributors":[{"name":"yangliu@tiduyun.com","email":"2457081614@qq.com","commits":1}]},"readingTime":{"minutes":2.13,"words":640},"filePathRelative":"framework/6.SpringBoot/6.springboot实现跨域请求.md","localizedDate":"2021年2月24日","autoDesc":true}');export{t as data};

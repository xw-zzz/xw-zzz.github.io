import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as n,b as s}from"./app-ef0b4d9d.js";const i="/assets/20220712142652-357db566.png",l="/assets/20220712143048-963be6ea.png",t="/assets/20220712143613-e2b4c219.png",o={},r=s(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><h3 id="cmd" tabindex="-1"><a class="header-anchor" href="#cmd" aria-hidden="true">#</a> CMD</h3><ul><li><p>作用:CMD指令用来指定启动容器时默认执行的命令</p></li><li><p>格式</p><ul><li>CMD [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]：相当于执行executable param1 param2，推荐方式；</li></ul><ul><li>CMD command param1 param2：在默认的Shell中执行，提供给需要交互的应用</li><li>CMD [&quot;param1&quot;, &quot;param2&quot;]：提供给ENTRYPOINT的默认参数</li></ul></li><li><p>注意：</p><ul><li>每个Dockerfile只能有一条CMD命令。如果指定了多条命令，只有最后一条会被执行</li><li>如果用户启动容器时候手动指定了运行的命令（作为run命令的参数），则会覆盖掉CMD指定的命令</li></ul></li></ul><h3 id="entrypoint" tabindex="-1"><a class="header-anchor" href="#entrypoint" aria-hidden="true">#</a> ENTRYPOINT</h3><ul><li>作用： 指定镜像的默认入口命令，该入口命令会在启动容器时作为根命令执行，所有传入值作为该命令的参数</li><li>格式 <ul><li>ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]:exec调用执行</li><li>ENTRYPOINT command param1 param2:shell中执行</li></ul></li><li>注意 <ul><li>每个Dockerfile中只能有一个ENTRYPOINT，当指定多个时，只有最后一个起效。</li></ul></li></ul><h2 id="实践" tabindex="-1"><a class="header-anchor" href="#实践" aria-hidden="true">#</a> 实践</h2><h3 id="cmd测试" tabindex="-1"><a class="header-anchor" href="#cmd测试" aria-hidden="true">#</a> CMD测试</h3><p>Dockerfile如下：</p><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> ubuntu:14.04</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;echo&quot;</span>,<span class="token string">&quot;hello world&quot;</span>]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行命令 <code> docker run -it --rm test:1.0 /bin/sh -c &#39;echo hello 11111&#39;</code>输出如下:</p><p><img src="`+i+`" alt="" loading="lazy"></p><p>用户启动容器时候手动指定了运行的命令（作为run命令的参数），则会覆盖掉CMD指定的命令。</p><h3 id="entrypoint测试" tabindex="-1"><a class="header-anchor" href="#entrypoint测试" aria-hidden="true">#</a> ENTRYPOINT测试</h3><p>Dockerfile如下：</p><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="language-docker"><code><span class="token instruction"><span class="token keyword">FROM</span> ubuntu:14.04</span>
<span class="token instruction"><span class="token keyword">ENTRYPOINT</span> [<span class="token string">&quot;echo&quot;</span>,<span class="token string">&quot;hello world&quot;</span>]</span>
<span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;向往&quot;</span>]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行命令 <code>docker run -it --rm test:1.1</code>，结果如下：</p><p><img src="`+l+'" alt="" loading="lazy"></p><p>可见CMD给ENTRYPOINT提供了默认参数。</p><p><img src="'+t+'" alt="" loading="lazy"></p><p>替换CMD默认参数。</p>',20),c=[r];function d(p,u){return e(),n("div",null,c)}const k=a(o,[["render",d],["__file","3.Dockerfile中CMD与ENTRYPOINGT区别.html.vue"]]);export{k as default};

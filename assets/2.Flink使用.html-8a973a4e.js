import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,b as t}from"./app-ef0b4d9d.js";const e={},p=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>Flink是一个基于流的数据处理引擎，主要过程包括数据的来源、转换、结果存储。</p><ul><li>来源</li><li>元素集合 <ul><li>env.fromElements</li><li>env.fromColletion</li><li>env.fromSequence(start,end);</li></ul></li><li>文件 <ul><li>env.readTextFile(本地文件);</li><li>env.readTextFile(HDFS文件);</li></ul></li><li>socket <ul><li>env.socketTextStream(&quot;ip&quot;, 5555)</li></ul></li><li>自定义Source <ul><li>并行度为1 <ul><li>SourceFunction</li><li>RichSourceFunction</li></ul></li><li>并行度大于1 <ul><li>ParallelSourceFunction</li><li>RichParallelSourceFunction</li></ul></li></ul></li><li>与其他第三方系统connect对接，如kafka，es等</li></ul><h2 id="第一个demo" tabindex="-1"><a class="header-anchor" href="#第一个demo" aria-hidden="true">#</a> 第一个Demo</h2><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

        <span class="token comment">//构建执行任务环境以及任务的启动的入口, 存储全局相关的参数</span>
        <span class="token class-name">StreamExecutionEnvironment</span> env <span class="token operator">=</span> <span class="token class-name">StreamExecutionEnvironment</span><span class="token punctuation">.</span><span class="token function">getExecutionEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        env<span class="token punctuation">.</span><span class="token function">setRuntimeMode</span><span class="token punctuation">(</span><span class="token class-name">RuntimeExecutionMode</span><span class="token punctuation">.</span><span class="token constant">AUTOMATIC</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//设置并行度</span>
        <span class="token comment">//env.setParallelism(1);</span>

        <span class="token comment">//相同类型元素的数据流 source</span>
        <span class="token class-name">DataStream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stringDS <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token function">fromElements</span><span class="token punctuation">(</span><span class="token string">&quot;java,SpringBoot&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;spring cloud,redis&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;kafka,小滴课堂&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        stringDS<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;处理前&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">// FlatMapFunction&lt;String, String&gt;, key是输入类型，value是Collector响应的收集的类型，看源码注释，也是 DataStream&lt;String&gt;里面泛型类型</span>
        <span class="token class-name">DataStream</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> flatMapDS <span class="token operator">=</span> stringDS<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FlatMapFunction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">String</span> value<span class="token punctuation">,</span> <span class="token class-name">Collector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> collector<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

                <span class="token class-name">String</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span>  value<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    collector<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//输出 sink</span>
        flatMapDS<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;处理后&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//DataStream需要调用execute,可以取个名称</span>
        env<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&quot;flat map job&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),c=[p];function o(l,i){return s(),a("div",null,c)}const k=n(e,[["render",o],["__file","2.Flink使用.html.vue"]]);export{k as default};

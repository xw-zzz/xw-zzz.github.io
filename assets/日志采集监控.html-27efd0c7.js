import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as r,c as p,a,e as n,d as l,b as s}from"./app-ef0b4d9d.js";const o="/assets/image-20221014151456943-f90235f7.png",c="/assets/image-20221014151542867-38bfbcbf.png",d="/assets/image-20221014151748826-f627eac0.png",m="/assets/image-20221014152657948-add8660d.png",u={},v=a("h2",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),n(" 安装")],-1),b=a("div",{class:"hint-container note"},[a("p",{class:"hint-container-title"},"注意"),a("p",null,"开发测试环境使用该方式，生产环境使用集群部署。")],-1),k=a("p",null,"二进制安装promtail",-1),g={href:"https://github.com/grafana/loki/releases",target:"_blank",rel:"noopener noreferrer"},h=s(`<p>解压安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 解压 ，如果没有unzip命令执行yum install -y unzip</span>
<span class="token function">unzip</span> promtail-linux-amd64.zip 
<span class="token comment">## 授权</span>
<span class="token function">chmod</span> a+x  promtail-linux-amd64
<span class="token comment">##启动</span>
 ./promtail-linux-amd64 <span class="token parameter variable">-config.file</span><span class="token operator">=</span>./promtail-config.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_=s(`<p>配置服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>cat<span class="token operator">&gt;</span>/usr/lib/systemd/system/promtail.service <span class="token operator">&lt;&lt;</span><span class="token string">EOF

[Unit]
Description=promtail
Documentation=https://github.com/grafana/loki/tree/master
After=network.target

[Service]
Type=simple
User=root
## 该配置请参照实际情况填写
ExecStart=/data/promtail/promtail -config.file=/data/promtail/promtail-config.yaml  
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行以下命令，启动promtail并设置开机自启：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl daemon-reload
systemctl start promtail
systemctl <span class="token builtin class-name">enable</span> promtail
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),f={href:"https://sbcode.net/grafana/install-promtail-service/",target:"_blank",rel:"noopener noreferrer"},y=s(`<li><p>docker安装promtail</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://raw.githubusercontent.com/grafana/loki/v2.6.1/clients/cmd/promtail/promtail-docker-config.yaml <span class="token parameter variable">-O</span> promtail-config.yaml
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> promtail <span class="token parameter variable">-d</span> <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>:/mnt/config <span class="token parameter variable">-v</span> /var/log:/var/log <span class="token parameter variable">--link</span> loki grafana/promtail:2.6.1 <span class="token parameter variable">-config.file</span><span class="token operator">=</span>/mnt/config/promtail-config.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>docker安装loki</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://raw.githubusercontent.com/grafana/loki/v2.6.1/cmd/loki/loki-local-config.yaml <span class="token parameter variable">-O</span> loki-config.yaml
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> loki <span class="token parameter variable">-d</span> <span class="token parameter variable">--network</span><span class="token operator">=</span>host <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>:/mnt/config <span class="token parameter variable">-p</span> <span class="token number">3100</span>:3100 grafana/loki:2.6.1 <span class="token parameter variable">-config.file</span><span class="token operator">=</span>/mnt/config/loki-config.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装alertmanger</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> alertmanager <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">9093</span>:9093 quay.io/prometheus/alertmanager
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,3),E=s(`<p>安装grafana</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span><span class="token operator">=</span>grafana <span class="token parameter variable">-d</span> <span class="token parameter variable">-p</span> <span class="token number">3000</span>:3000 grafana/grafana  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),x={href:"http://$",hostIp:"",target:"_blank",rel:"noopener noreferrer"},B=a("h2",{id:"测试",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#测试","aria-hidden":"true"},"#"),n(" 测试")],-1),A=a("p",null,"使用loki监控某服务日志并进行告警。",-1),w=s(`<li><p>服务宿主机安装promatail</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 创建配置文件挂载目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /data/promtail <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> /data/promtail
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>添加配置文件 <code>promtail-config.yaml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">http_listen_port</span><span class="token punctuation">:</span> <span class="token number">9080</span>
  <span class="token key atrule">grpc_listen_port</span><span class="token punctuation">:</span> <span class="token number">0</span>

<span class="token key atrule">positions</span><span class="token punctuation">:</span>
  <span class="token key atrule">filename</span><span class="token punctuation">:</span> /tmp/positions.yaml

<span class="token key atrule">clients</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//192.168.1.177<span class="token punctuation">:</span>3100/loki/api/v1/push

<span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span>
<span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> cmp<span class="token punctuation">-</span>maintenance<span class="token punctuation">-</span>server<span class="token punctuation">-</span>log
  <span class="token key atrule">static_configs</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> localhost
    <span class="token key atrule">labels</span><span class="token punctuation">:</span>
      <span class="token key atrule">job</span><span class="token punctuation">:</span> varlogs
      <span class="token key atrule">__path__</span><span class="token punctuation">:</span> /var/log/cmp/cmp<span class="token punctuation">-</span>maintenance<span class="token punctuation">-</span>server.log

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动promtail</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--name</span> promtail <span class="token parameter variable">-d</span> <span class="token parameter variable">--network</span><span class="token operator">=</span>host <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>:/mnt/config <span class="token parameter variable">-v</span> /var/log:/var/log <span class="token parameter variable">-v</span> /data/promtail:/mnt/promtail grafana/promtail:2.6.1 <span class="token parameter variable">-config.file</span><span class="token operator">=</span>/mnt/promtail/promtail-config.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,3),z=a("p",null,"grafana添加数据源和面板",-1),C=a("li",null,[a("p",null,"添加loki数据源"),a("p",null,[a("img",{src:o,alt:"image-20221014151456943",loading:"lazy"})]),a("p",null,[a("img",{src:c,alt:"image-20221014151542867",loading:"lazy"})])],-1),F=a("p",null,"添加看板",-1),D=a("p",null,[a("img",{src:d,alt:"image-20221014151748826",loading:"lazy"})],-1),$={href:"https://grafana.com/grafana/dashboards/%E9%80%89%E6%8B%A9%E9%9C%80%E8%A6%81%E7%9A%84%E9%9D%A2%E6%9D%BF%E5%B9%B6%E5%AF%BC%E5%85%A5%EF%BC%8C%E4%BB%A5%E7%9C%8B%E6%9D%BF13639%E4%B8%BA%E4%BE%8B%E3%80%82%E7%BB%93%E6%9E%9C%E5%A6%82%E4%B8%8B%EF%BC%9A",target:"_blank",rel:"noopener noreferrer"},I=a("p",null,[a("img",{src:m,alt:"image-20221014152657948",loading:"lazy"})],-1),N=a("li",null,[a("p",null,"将日志存储到minio")],-1);function O(V,S){const e=t("ExternalLinkIcon");return r(),p("div",null,[v,b,a("ul",null,[a("li",null,[k,a("ul",null,[a("li",null,[a("p",null,[n("下载二进制文件，"),a("a",g,[n("https://github.com/grafana/loki/releases"),l(e)])])]),a("li",null,[h,a("ul",null,[a("li",null,[_,a("p",null,[n("也可参考： "),a("a",f,[n("https://sbcode.net/grafana/install-promtail-service/"),l(e)])])])])])])]),y,a("li",null,[E,a("p",null,[n("访问地址: "),a("a",x,[n("http://$"),l(e)]),n(":3000 ,初始化用户名/密码: admin/admin")])])]),B,A,a("ul",null,[w,a("li",null,[z,a("ul",null,[C,a("li",null,[F,D,a("p",null,[n("可去 "),a("a",$,[n("https://grafana.com/grafana/dashboards/选择需要的面板并导入，以看板13639为例。结果如下："),l(e)])]),I])])]),N])])}const T=i(u,[["render",O],["__file","日志采集监控.html.vue"]]);export{T as default};
